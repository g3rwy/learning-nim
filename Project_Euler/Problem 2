#[

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

]#
const LIMIT = 4_000_000'u

var
  a = 1'u
  b = 2'u
  sum = 0'u

while a < LIMIT and b < LIMIT:
  # made without using additional variable for fun
  a = a + b
  b = a + b
  a = b - a
  b -= a
  if a mod 2 == 0:
    sum += a
  elif b mod 2 == 0:
    sum += b
    
  echo a, " ", b
echo sum
#[
Branchless
sum = 0
a = 1
b = 2
while a < LIMIT and b < LIMIT:
  a = a + b
  b = a + b
  a = b - a
  b -= a
  sum += a * cast[uint](a mod 2 == 0) + b * cast[uint](b mod 2 == 0)
    
  echo a, " ", b
echo sum
]#
